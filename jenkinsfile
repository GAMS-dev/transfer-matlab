def GAMS_FOR_LINUX = "/opt/gams/gams36.0_linux_x64_64_sfx"
def GAMS_FOR_MACOS = "/Library/Frameworks/GAMS.framework/Versions/36/Resources"
def GAMS_FOR_WINDOWS = "C:\\GAMS\\36"

def OCTAVE_FOR_WINDOWS = "C:\\Users\\Administrator\\AppData\\Local\\Programs\\GNU Octave\\Octave-6.3.0\\mingw64\\bin"

pipeline {
    agent none

    options {
        parallelsAlwaysFailFast()
        disableConcurrentBuilds()
    }

    stages {
        stage('Build') {
            parallel {
                stage ('linux') {
                    agent { label 'master' }
                    environment {
                        GAMS_CORE_PATH="${GAMS_FOR_LINUX}"
                        PATH="${GAMS_FOR_LINUX}:${PATH}"
                    }
                    steps {
                        step([$class: 'WsCleanup'])
                        checkout scm
                        sh'''
                            flatpak run org.octave.Octave --no-gui --no-window-system --eval version
                        '''
                        sh'''
                            flatpak run --filesystem=${WORKSPACE} org.octave.Octave \
                                --no-gui --no-window-system --path ${WORKSPACE} \
                                --eval "gams_transfer_setup( \
                                    'system_dir', '${GAMS_CORE_PATH}' \
                                )"
                        '''
                    }
                }
                stage ('windowsX64') {
                    agent { label 'windowsX64' }
                    environment {
                        GAMS_CORE_PATH="${GAMS_FOR_WINDOWS}"
                        PATH="${GAMS_FOR_WINDOWS};${OCTAVE_FOR_WINDOWS};${PATH}"
                    }
                    steps {
                        step([$class: 'WsCleanup'])
                        checkout scm
                        bat '''
                            octave --no-gui --no-window-system --eval version
                        '''
                        bat '''
                            octave --no-gui --no-window-system \
                                --eval "gams_transfer_setup( \
                                    'system_dir', '%GAMS_CORE_PATH%' \
                                )"
                        '''
                    }
                }
                stage ('macos') {
                    agent { label 'macos' }
                    environment {
                        GAMS_CORE_PATH="${GAMS_FOR_MACOS}"
                        PATH="${GAMS_FOR_MACOS}:${PATH}"
                    }
                    steps {
                        step([$class: 'WsCleanup'])
                        checkout scm
                        sh'''
                            octave --no-gui --no-window-system --eval version
                        '''
                        sh'''
                            octave --no-gui --no-window-system \
                                --eval "gams_transfer_setup( \
                                    'system_dir', '${GAMS_CORE_PATH}' \
                                )"
                        '''
                    }
                }

            }
        }
        stage('Test') {
            parallel {
                stage ('linux') {
                    agent { label 'master' }
                    environment {
                        GAMS_CORE_PATH="${GAMS_FOR_LINUX}"
                        PATH="${GAMS_FOR_LINUX}:${PATH}"
                    }
                    steps {
                        sh'''
                            cp /usr/share/GAMS/gamslice.txt ${WORKSPACE}/gamslice.txt
                            flatpak run --filesystem=${WORKSPACE} org.octave.Octave \
                                --no-gui --no-window-system --path ${WORKSPACE} \
                                --eval "gams_transfer_test( \
                                    'system_dir', '${GAMS_CORE_PATH}', \
                                    'working_dir', '${WORKSPACE}/test_linux', \
                                    'license', '${WORKSPACE}/gamslice.txt', \
                                    'exit_on_fail', true \
                                )"
                        '''
                    }
                }
                stage ('windowsX64') {
                    agent { label 'windowsX64' }
                    environment {
                        GAMS_CORE_PATH="${GAMS_FOR_WINDOWS}"
                        PATH="${GAMS_FOR_WINDOWS};${OCTAVE_FOR_WINDOWS};${PATH}"
                    }
                    steps {
                        bat '''
                            octave --no-gui --no-window-system --path %WORKSPACE% \
                                --eval "gams_transfer_test( \
                                    'system_dir', '%GAMS_CORE_PATH%', \
                                    'working_dir', '%WORKSPACE%/test_windows', \
                                    'exit_on_fail', true \
                                )"
                        '''
                    }
                }
                stage ('macos') {
                    agent { label 'macos' }
                    environment {
                        GAMS_CORE_PATH="${GAMS_FOR_MACOS}"
                        PATH="/usr/local/opt/openjdk/bin:${GAMS_FOR_MACOS}:${PATH}"
                    }
                    steps {
                        sh'''
                            octave --no-gui --no-window-system --path ${WORKSPACE} \
                                --eval "gams_transfer_test( \
                                    'system_dir', '${GAMS_CORE_PATH}', \
                                    'working_dir', '${WORKSPACE}/test_linux', \
                                    'exit_on_fail', true \
                                )"
                        '''
                    }
                }
            }
        }
    }
}

