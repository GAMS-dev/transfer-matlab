
stages:
  - images
  - build_octave
  - test_octave
  - build_matlab
  - test_matlab
  - build_doc
  - package
  - release
  - deploy

variables:
    GIT_SUBMODULE_STRATEGY: recursive
    PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/gams_transfer_matlab/${CI_COMMIT_TAG}/"

image_linux:
    stage: images
    tags:
        - linux
    image:
        name: docker:20.10
    services:
        - docker:20.10-dind
    variables:
        DOCKER_TLS_CERTDIR: "/certs"
    before_script:
        - mkdir -p $HOME/.docker
        - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
    script:
        - sed -i "s/_matlab_username_/$MATLAB_USERNAME/g" images/linux/runmatlab.sh
        - sed -i "s/_matlab_password_/$MATLAB_PASSWORD/g" images/linux/runmatlab.sh
        - docker build -t linux/builder images/linux
        - docker tag linux/builder $CI_REGISTRY_IMAGE/linux/builder:latest
        - docker push $CI_REGISTRY_IMAGE/linux/builder:latest
    rules:
        - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
          changes:
            - images/linux/Dockerfile
          when: manual
          allow_failure: true

build_documentation:
    stage: build_doc
    tags:
        - linux
    image:
        name: $CI_REGISTRY_IMAGE/linux/builder
    script:
        - ./gams_transfer_doc.sh
    only:
        - merge_requests
        - master
        - tags
    artifacts:
        name: doc
        paths:
            - build/doc/html
        expire_in: 1 day

build_octave_linux:
    stage: build_octave
    tags:
        - linux
    image:
        name: $CI_REGISTRY_IMAGE/linux/builder
    script:
        - octave --no-gui --no-window-system --eval "gams_transfer_setup('target_dir', 'octave_linux')"
    only:
        - merge_requests
        - master
    artifacts:
        name: gams_transfer_octave_linux
        paths:
            - octave_linux
        expire_in: 1 day

build_octave_macos:
    stage: build_octave
    tags:
        - macos
    script:
        - octave --no-gui --no-window-system --eval "gams_transfer_setup('target_dir', 'octave_macos')"
    only:
        - merge_requests
        - master
    artifacts:
        name: gams_transfer_octave_macos
        paths:
            - octave_macos
        expire_in: 1 day

build_octave_macos_arm:
    stage: build_octave
    tags:
        - macos-arm64
    script:
        - octave --no-gui --no-window-system --eval "gams_transfer_setup('target_dir', 'octave_macos_arm')"
    only:
        - merge_requests
        - master
    artifacts:
        name: gams_transfer_octave_macos_arm
        paths:
            - octave_macos_arm
        expire_in: 1 day

build_matlab_linux:
    stage: build_matlab
    tags:
        - linux
    image:
        name: $CI_REGISTRY_IMAGE/linux/builder
    script:
        - ~/Documents/MATLAB/runmatlab.sh "gams_transfer_setup('target_dir', 'matlab_linux')"
    only:
        - merge_requests
        - master
        - tags
    artifacts:
        name: gams_transfer_matlab_linux
        paths:
            - matlab_linux
        expire_in: 1 day

build_matlab_macos:
    stage: build_matlab
    tags:
        - macos
    script:
        - matlab -nodisplay -nosplash -nodesktop -r "gams_transfer_setup('target_dir', 'matlab_macos')"
    only:
        - merge_requests
        - master
        - tags
    artifacts:
        name: gams_transfer_matlab_macos
        paths:
            - matlab_macos
        expire_in: 1 day

build_matlab_macos_arm:
    stage: build_matlab
    tags:
        - macos-arm64
    script:
        - matlab -nodisplay -nosplash -nodesktop -r "gams_transfer_setup('target_dir', 'matlab_macos_arm')"
    only:
        - merge_requests
        - master
        - tags
    artifacts:
        name: gams_transfer_matlab_macos_arm
        paths:
            - matlab_macos_arm
        expire_in: 1 day

build_matlab_windows:
    stage: build_matlab
    tags:
        - windows-shell
    script:
        - matlab.exe -batch "gams_transfer_setup('target_dir', 'matlab_windows')"
    only:
        - merge_requests
        - master
        - tags
    artifacts:
        name: gams_transfer_matlab_windows
        paths:
            - matlab_windows
        expire_in: 1 day

test_octave_linux:
    stage: test_octave
    tags:
        - linux
    image:
        name: $CI_REGISTRY_IMAGE/linux/builder
    needs: [build_octave_linux]
    script:
        - mkdir gdx
        - cd gdx
        - curl -o gdx.zip $URL_GDX_LINUX
        - unzip gdx.zip
        - cd ..
        - octave --no-gui --no-window-system --path $PWD/octave_linux --eval "gams_transfer_test('gams_dir', 'gdx', 'working_dir', 'unittest', 'exit_on_fail', true, 'only_default_config', true)"
    only:
        - merge_requests
        - master

test_octave_macos:
    stage: test_octave
    tags:
        - macos
    needs: [build_octave_macos]
    script:
        - mkdir gdx
        - cd gdx
        - curl -o gdx.zip $URL_GDX_MACOS
        - tar -xf gdx.zip
        - cd ..
        - octave --no-gui --no-window-system --path $PWD/octave_macos --eval "gams_transfer_test('gams_dir', 'gdx', 'working_dir', 'unittest', 'exit_on_fail', true, 'only_default_config', true)"
    only:
        - merge_requests
        - master

test_octave_macos_arm:
    stage: test_octave
    tags:
        - macos-arm64
    needs: [build_octave_macos_arm]
    script:
        - mkdir gdx
        - cd gdx
        - curl -o gdx.zip $URL_GDX_MACOS_ARM
        - tar -xf gdx.zip
        - cd ..
        - octave --no-gui --no-window-system --path $PWD/octave_macos_arm --eval "gams_transfer_test('gams_dir', 'gdx', 'working_dir', 'unittest', 'exit_on_fail', true, 'only_default_config', true)"
    only:
        - merge_requests
        - master

test_matlab_linux:
    stage: test_matlab
    tags:
        - linux
    image:
        name: $CI_REGISTRY_IMAGE/linux/builder
    needs: [build_matlab_linux]
    script:
        - mkdir gdx
        - cd gdx
        - curl -o gdx.zip $URL_GDX_LINUX
        - unzip gdx.zip
        - cd ..
        - ~/Documents/MATLAB/runmatlab.sh "addpath('matlab_linux'); gams_transfer_test('gams_dir', 'gdx', 'working_dir', 'unittest', 'exit_on_fail', true)"
    only:
        - merge_requests
        - master

test_matlab_macos:
    stage: test_matlab
    tags:
        - macos
    needs: [build_matlab_macos]
    script:
        - mkdir gdx
        - cd gdx
        - curl -o gdx.zip $URL_GDX_MACOS
        - tar -xf gdx.zip
        - cd ..
        - matlab -batch "addpath('matlab_macos'); gams_transfer_test('gams_dir', 'gdx', 'working_dir', 'unittest', 'exit_on_fail', true)"
    only:
        - merge_requests
        - master

test_matlab_macos_arm:
    stage: test_matlab
    tags:
        - macos-arm64
    needs: [build_matlab_macos_arm]
    script:
        - mkdir gdx
        - cd gdx
        - curl -o gdx.zip $URL_GDX_MACOS_ARM
        - tar -xf gdx.zip
        - cd ..
        - matlab -batch "addpath('matlab_macos_arm'); gams_transfer_test('gams_dir', 'gdx', 'working_dir', 'unittest', 'exit_on_fail', true)"
    only:
        - merge_requests
        - master

test_matlab_windows:
    stage: test_matlab
    tags:
        - windows-shell
    needs: [build_matlab_windows]
    script:
        - mkdir gdx
        - cd gdx
        - curl -o gdx.zip $URL_GDX_WINDOWS
        - tar -xf gdx.zip
        - cd ..
        - matlab.exe -batch "addpath('matlab_windows'); gams_transfer_test('gams_dir', 'gdx', 'working_dir', 'unittest', 'exit_on_fail', true)"
    only:
        - merge_requests
        - master

package:
    stage: package
    tags:
        - linux
    image:
        name: $CI_REGISTRY_IMAGE/linux/builder
    script:
        - cd matlab_macos
        - sudo zip -r gams_transfer_matlab_macos.zip +GAMSTransfer
        - |
            curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file gams_transfer_matlab_macos.zip ${PACKAGE_REGISTRY_URL}
        - cd ..
        - cd matlab_macos_arm
        - sudo zip -r gams_transfer_matlab_macos_arm.zip +GAMSTransfer
        - |
            curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file gams_transfer_matlab_macos_arm.zip ${PACKAGE_REGISTRY_URL}
        - cd ..
        - cd matlab_windows
        - sudo zip -r gams_transfer_matlab_windows.zip +GAMSTransfer
        - |
            curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file gams_transfer_matlab_windows.zip ${PACKAGE_REGISTRY_URL}
        - cd ..
        - cd matlab_linux
        - sudo zip -r gams_transfer_matlab_linux.zip +GAMSTransfer
        - |
            curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file gams_transfer_matlab_linux.zip ${PACKAGE_REGISTRY_URL}
    only:
        - tags

release:
    stage: release
    tags:
        - linux
    image:
        name: $CI_REGISTRY_IMAGE/linux/builder
    script:
        - DESCR=$(grep -Pzo "(?s)GAMS Transfer Matlab $CI_COMMIT_TAG.*?((?=\nGAMS Transfer Matlab v)|$)" CHANGELOG | tr -d '\0')
        - |
            release-cli create \
                --name "Release $CI_COMMIT_TAG" \
                --tag-name $CI_COMMIT_TAG \
                --description "$DESCR" \
                --assets-link "{\"name\":\"gams_transfer_matlab_linux.zip\",\"url\":\"${PACKAGE_REGISTRY_URL}gams_transfer_matlab_linux.zip\"}" \
                --assets-link "{\"name\":\"gams_transfer_matlab_macos.zip\",\"url\":\"${PACKAGE_REGISTRY_URL}gams_transfer_matlab_macos.zip\"}" \
                --assets-link "{\"name\":\"gams_transfer_matlab_macos_arm.zip\",\"url\":\"${PACKAGE_REGISTRY_URL}gams_transfer_matlab_macos_arm.zip\"}" \
                --assets-link "{\"name\":\"gams_transfer_matlab_windows.zip\",\"url\":\"${PACKAGE_REGISTRY_URL}gams_transfer_matlab_windows.zip\"}"
    only:
        - tags

pages:
    stage: deploy
    tags:
        - linux
    image:
        name: alpine
    script:
        - mv build/doc/html public/
    artifacts:
        paths:
            - public
    only:
        - master
        - tags
